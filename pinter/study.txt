가상환경 셋팅 (파이참)

셋팅에서 pragmatic
add+ 해서 추가 해야됨
1. pip에 아무것도 없기 때문에 pip install django 로 장고를 설치해줌
2. phthon manage.py runserver 서버 실행으로 확인

#새로운 앱 만들기
1. python manage.py startapp accountapp
2. 메인-settings.py 에 새로 만든 앱의 이름을 넣어준다 .(installed_apps)에 추가 한다 .
3. views.py 에 보여질 내용을 넣는다
4. urls.py 를 통해서 admin, account, 등 urls들을 설정해준다
5. accountapp/urls.py 를 만들어서 내용을 입력한다 .



## 가상환결 설명서
1. 가상환경 실행 : source myvenv/bin/activate.
2. 서버 실행 : python manage.py runserver


## manage.py 설명서
py manage.py makemigrations     ## 파이썬파일을 만들어준다
py manage.py migrate            ## db와 연동시작


## git 설명서
.gitignore  # 파일을 생성해줘서 쓸대없이 패치되는 파일들을 정리해준다 .
git status          #무엇을 업로드해줄것인지 알려준다 .
git commit -m "내용추가"
git push origin master      ##내저장소로 이동!!
git reset --hard HEAD       ##가장 최근의 commit한 상태로 되돌아간다 .

## 장고
pip install django-environ
SECRET_KEY 설정할때 사용한다 .
앱 - settings.py 에 SECRET_KEY 를 .env(파일만들기) 의 내용에서 가져와서 사용한다.

## 템플릿 폴더를 생성후 base.html 파일을 만든다 8강
render를 통해서 넘겨준다 .
settings.py에서  templates=[ 수정해준다 ]

## head.html 파일 생성 9강
새로운 head.html 파일을 만들어서 include 함수를 사용해서 불러온다
해더 부분만 수정하면 include를 사용하는 모든곳에 내용이 변경된다 . 작업효율성 확대
base.html 수정
head.html 수정
footer.html 생성
header.html 생성
accountapp 폴더 생성 hello_world.html 생성
views.py 에 hello_world.html 연결완료

## 10강 디자인하기
head.html 에 푸트스크랩css링크를 붙여넣어 불러온다 .

## 11강 static설정 및 css파일분리
settings.py 에 static_root =  구분을 추가해준다

## 12강 css설명
block = 밑으로 쌓인다
inline = 옆으로 쌓인다
inline-block = 블록인데 옆으로 쌓인다 .
none = 존재하지 않다. 아무것도 없다
hidden = 존재한다 보이지않을뿐
# 사이즈 설명
px = 픽셀 고정 !
rem = 이걸로 많이 한다 !!!

## 13강 css display 속성
style="display: inline;" 12강의 css설명을 다시 보여준다 .

## 14강 드디어 model 시작!
class 만들고 시작
새로운 시트를 만들어서 저장하고 연동한다 .
settings.py 에 DATABASE에 db위치가 어딘인지 알수 있다 .

## 15강 get post 차이
get : 무엇을 보여줘 ! ?:파라미터 (파라미터는 시작한다 )
post : create , update 무엇을 만들거나 업데이터 할때 한다 .

## 16강 get post 프로토콜 실습
get 과 post 를 사용하여 화면에 표시

## 17강 post 통신을 이용한 db작업 시작
포스트 데이터를 보내고 받고 해서 서버에서 저장하기 까지 입니다 .
hello_world.html ,
views.py
models.py 추가 하여 객체를 가져올수 있게 만든다




## 29강 슈퍼유저 만들기
python manage.py createsuperuser        #슈퍼유저 만들기
미디어 관련된 pip 설치 해야됨
pip install pillow

## 30강 프로필 구현
1:1로 하나의 아이디에 하나의 프로필만 있다
프로필만 따로 볼수 있는 디테일 웹은 만들지 않는다
1. python manage.py startapp profileapp
2. seetings.py 에 installed_apps 에 만들어진 앱이름을 추가한다 .
3. urls.py 에 urlpatterns 에 프로파일 앱의 경로를 지정해준다 .
4. profileapp 폴더에 urls.py 파일을 만들고 내용입력한다
5. profileapp 폴더에 models.py에 모델을 새로 만들다. (유저특성(1:1),이미지,닉네임,메시지, 등등)
6. 폼을 만든다 . 기존의 model폼을 가지고올 forms.py를 만들어준다 .

## 31강 프로필 구현 1
1. python manage.py makemigrations 저번강의에서 만든 모델을 db와 연동 시켜준다
2. python manage.py migrate ## db 생성!

## 34강 magicGrid 소개및 aricleapp 생성
템플릿앱에 아티클 앱 폴더 생성 - list.html 생성

##39강 모바일 디버깅 반응형 레이아웃 만들기


## 43강 구독서비스
구독한 게시물 모두 가지고 오기
field lookups =

## 44강 wysiwyg

## 46강 docker
가상화 언제 어디환경에서 모두 빠르게 할수 있다

## 47강 가상서버대여
도커를 이용해서 가상서버 셋팅을 할수가 있다 !

